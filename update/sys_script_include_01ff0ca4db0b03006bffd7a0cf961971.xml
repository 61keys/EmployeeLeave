<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_125992_employee.SH_EmpTime</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>SH_EmpTime</name>
        <script><![CDATA[var SH_EmpTime = Class.create();
SH_EmpTime.prototype = {
	initialize: function() {
	},
	
	
	getHiredDate: function(id){
		var result='';
		var gr = new GlideRecord("sys_user");
		gr.addQuery('sys_id', id);
		gr.query();
		if(gr.next()){
			result = gr.x_125992_employee_hired_date;
		}
		return result;
	},	
	
	getMaxHours: function(id){
		var result='';
		var gr = new GlideRecord("sys_user");
		gr.addQuery('sys_id', id);
		gr.query();
		if(gr.next()){			
			result = gr.x_125992_employee_max_vacation_hours;
		}
		return result;
	},
	
	updateMaxHours: function(id,total){
		gs.debug("updateMaxHours: id: " + id + " total: " + total);
		var result='';
		var gr = new GlideRecord("sys_user");
		gr.addQuery('sys_id', id);
		gr.query();
		gs.error("updateMaxHours", gr.getLastErrorMessage());
		if(gr.next()){			
			gr.x_125992_employee_max_vacation_hours = gr.x_125992_employee_max_vacation_hours - total;
			gr.update();			
		}		
	},
	
	getFloating: function(id){
		var result='';
		var gr = new GlideRecord("sys_user");
		gr.addQuery('sys_id', id);
		gr.query();
		if(gr.next()){
			result = gr.x_125992_employee_floating_holidays;
		}
		return result;
	},
	
	updateFloatingDays: function(id){
		var result='';
		var gr = new GlideRecord("sys_user");
		gr.addQuery('sys_id', id);
		gr.query();		
		if(gr.next()){			
			gr.x_125992_employee_floating_holidays = gr.x_125992_employee_floating_holidays - 1;
			gr.update();
		}		
	},
	
	getDays: function(str){
		//var str = hD
		var sgd1 = new GlideDate();
		sgd1.getDisplayValueInternal();
		//sgd1.setDisplayValue('2018-01-31');
		var sgd2 = new GlideDate();
		//sgd2.setDisplayValue(str.toString());
		sgd2.setDisplayValue('2018-01-01');
		
		duration= GlideDate.subtract(sgd2, sgd1);
		var days = duration.getDisplayValue();
		days = this.getJustDays(days.toString());
		//duration = this.getJustDays(duration);
		//return duration.getDisplayValue();
		return parseInt(days);
		
	},
	
	getAccrual:function(maxHours,days){
		
		var rate = maxHours/24;
		var payperiods = Math.floor(days/15);
		var accrual = rate * payperiods;
		
		return accrual;
		
	},
	
	//get the days
	getJustDays:function(str){
		var day = str;
		day = day.split(" ")[0];
		day = parseFloat(day);
		return day;
	},
	
	addTimeCard:function(userId,weekStart,sun,mon,tues,wed,thurs,fri,sat,category,total){		
		gs.debug("This is the values:" + userId,weekStart,sun,mon,tues,wed,thurs,fri,sat,category,total);
		var weekStartsOn = new GlideDate();
		weekStartsOn.setValue(weekStart);
		var timeSheetFactory = new global.TimeSheetFactory();
		var	timeSheetId = timeSheetFactory.getTimeSheet(userId, weekStartsOn);
		var gr = new GlideRecord('time_card');
		gr.initialize();
		gr.setValue('user', userId);
		gr.setValue('week_starts_on', weekStartsOn);
		gr.setValue('time_sheet', timeSheetId);
		gr.sunday = sun;
		gr.monday = mon;
		gr.tuesday = tues;
		gr.wednesday = wed;
		gr.thursday = thurs;
		gr.friday = fri;
		gr.sat = sat;		
		gr.state = "Approved";
		gr.category = category;
		gr.user = userId;
		gr.insert();
		
		this.updatePTO(category,total,userId);
	},
		
	updatePTO:function(category,total,userId){
		gs.debug("UpdatePTO: id: " + userId + " category: " + category + " total: " + total);
		if(category == 'company_holiday'){
			
		}
		if(category == 'excused_leave'){
			
		}
		if(category == 'floating_holiday'){
			this.updateFloatingDays(userId);
		}
		if(category == 'funeral'){
			
		}
		if(category == 'sick_leave'){
			
		}
		if(category == 'vacation'){
			this.updateMaxHours(userId, total);
		}		
		
	},
	
	type: 'SH_EmpTime'
	
	
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-12-11 19:49:27</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>01ff0ca4db0b03006bffd7a0cf961971</sys_id>
        <sys_mod_count>86</sys_mod_count>
        <sys_name>SH_EmpTime</sys_name>
        <sys_package display_value="Employee Leave Request" source="x_125992_employee">2fb148a7db3203006bffd7a0cf9619ef</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Employee Leave Request">2fb148a7db3203006bffd7a0cf9619ef</sys_scope>
        <sys_update_name>sys_script_include_01ff0ca4db0b03006bffd7a0cf961971</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-01-03 21:15:11</sys_updated_on>
    </sys_script_include>
</record_update>
