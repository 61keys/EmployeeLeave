<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_125992_employee.SH_EmpTime</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>SH_EmpTime</name>
        <script><![CDATA[var SH_EmpTime = Class.create();
SH_EmpTime.prototype = {
	initialize: function() {
	},
	
	
	getHiredDate: function(id){
		var result='';
		var gr = new GlideRecord("sys_user");
		gr.addQuery('sys_id', id);
		gr.query();
		if(gr.next()){
			result = gr.x_125992_employee_hired_date;
		}
		return result;
	},
	
	updateTest: function(id,nm){
		gs.info("This is the id:" + id);
		gs.info("This is the name:" + nm);
		var gr = new GlideRecord("x_125992_employee_employee_leave_request_table");
		gr.addQuery('sys_id', id);
		gr.query();
		if(gr.next()){
			gr.comments = nm + " " + "this worked!";
			gr.update();
			gs.error(gr.getLastErrorMessage());
		}
		
	},
	
	updateTestScript: function(id){
		gs.info("This is the id:" + id);
		var gr = new GlideRecord("x_125992_employee_employee_leave_request_table");
		gr.addQuery('sys_id', id);
		gr.query();
		if(gr.next()){
			gr.pto_description = "this worked!";
			gr.update();
		}
	},
	
	/*updateHours: function(sysId,accrued,maxHours,floating,daysReq,floatingH){
		var result='';
		//maxHours = maxHours - daysReq;
		
		if(floatingH == 'Floating Holiday'){
			floating = floating - daysReq;
		}
		if(floatingH == 'Vacation'){
			maxHours = maxHours - daysReq;
		}
		floating = floating - daysReq;
		var gr = new GlideRecord("sys_user");
		gr.addQuery('sys_id', id);
		gr.query();
		if(gr.next()){
			gr.x_125992_employee_max_vacation_hours = maxHours;
			gr.x_125992_employee_accrued_vacation_hours = accrued;
			gr.x_125992_employee_floating_holidays = floating;
			gr.update();
		}
	},*/
	
	getMaxHours: function(id){
		var result='';
		var gr = new GlideRecord("sys_user");
		gr.addQuery('sys_id', id);
		gr.query();
		if(gr.next()){
			result = gr.x_125992_employee_max_vacation_hours;
		}
		return result;
	},
	
	getFloating: function(id){
		var result='';
		var gr = new GlideRecord("sys_user");
		gr.addQuery('sys_id', id);
		gr.query();
		if(gr.next()){
			result = gr.x_125992_employee_floating_holidays;
		}
		return result;
	},
	
	getDays: function(str){
		//var str = hD
		var sgd1 = new GlideDate();
		sgd1.getDisplayValueInternal();
		//sgd1.setDisplayValue('2017-12-31');
		var sgd2 = new GlideDate();
		//sgd2.setDisplayValue(str.toString());
		sgd2.setDisplayValue('2017-01-01');
		
		duration= GlideDate.subtract(sgd2, sgd1);
		var days = duration.getDisplayValue();
		days = this.getJustDays(days.toString());
		//duration = this.getJustDays(duration);
		//return duration.getDisplayValue();
		return parseInt(days);
		
	},
	
	getAccrual:function(maxHours,days){
		
		var rate = maxHours/24;
		var payperiods = Math.floor(days/15);
		var accrual = rate * payperiods;
		
		return accrual;
		
	},
	
	//get the days
	getJustDays:function(str){
		var day = str;
		day = day.split(" ")[0];
		day = parseFloat(day);
		return day;
	},
	
	addTimeCard:function(){
		/*var tc = new GlideRecord('time_card')
		tc.initialize();
		tc.setWorkflow(true);
		tc.setValue("weeks_starts_on", "2017-12-17");
		tc.setValue("state", "Approved");
		tc.setValue("category", "Company Holiday");
		tc.sunday = "5";
		tc.monday = "8";
		tc.tuesday = "10";
		tc.user.setDisplayValue("Alyssa Biasotti");
		tc.task.setDisplayValue("TASK0020783");
		tc.insert();*/
	},
	
	type: 'SH_EmpTime'
	
	
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-12-11 19:49:27</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>01ff0ca4db0b03006bffd7a0cf961971</sys_id>
        <sys_mod_count>64</sys_mod_count>
        <sys_name>SH_EmpTime</sys_name>
        <sys_package display_value="Employee Leave Request" source="x_125992_employee">2fb148a7db3203006bffd7a0cf9619ef</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Employee Leave Request">2fb148a7db3203006bffd7a0cf9619ef</sys_scope>
        <sys_update_name>sys_script_include_01ff0ca4db0b03006bffd7a0cf961971</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-12-28 19:31:36</sys_updated_on>
    </sys_script_include>
</record_update>
